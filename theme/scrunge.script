# This is an example plymouth plugin script

# Load the image of a background
background_image = Image("catte.png");

# get screen ratio and scale if needed
screen_ratio = Window.GetHeight() / Window.GetWidth();
background_image_ratio = background_image.GetHeight() / background_image.GetWidth();

# Screen ratio is taller than image ratio, we will match the screen height
if (screen_ratio > background_image_ratio) {
  scale_factor =  Window.GetHeight() / background_image.GetHeight();
# Screen ratio is wider than image ratio, we will match the screen width
} else {
  scale_factor =  Window.GetWidth() / background_image.GetWidth();
}

# Create the a sprite using the scaled image - aim to fill half the screen
scaled_background_image = background_image.Scale(background_image.GetWidth()  * scale_factor / 2,
                                                 background_image.GetHeight() * scale_factor / 2);
background_sprite = Sprite(scaled_background_image);

background_sprite.SetX(Window.GetWidth()  / 2 - scaled_background_image.GetWidth () / 2);
background_sprite.SetY(Window.GetHeight() / 2 - scaled_background_image.GetHeight() / 2);

# Place right at the back of layer stack
background_sprite.SetZ(-10000);

fun refresh_callback () {
  # Currently we do nothing here
}
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialog --------------------------------

status = "normal";

fun dialog_setup() {
  local.box;
  local.lock;
  local.entry;
 
  box.image = Image("box.png");
  lock.image = Image("lock.png");
  entry.image = Image("entry.png");
 
  box.sprite = Sprite(box.image);
  box.x = Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
  box.y = Window.GetHeight() / 4 - box.image.GetHeight()/4;
  box.z = 10000;
  box.sprite.SetPosition(box.x, box.y, box.z);
    
  # scale the lock with the box height
  lock.scale_factor = box.image.GetHeight() / lock.image.GetHeight() * 0.75;
  lock.scaled = lock.image.Scale(lock.image.GetWidth()  * lock.scale_factor,
                                 lock.image.GetHeight() * lock.scale_factor);
  lock.sprite = Sprite(lock.scaled);
  
  lock.x = box.x + box.image.GetWidth()/2 - (lock.scaled.GetWidth() + entry.image.GetWidth()) / 2;
  lock.y = box.y + box.image.GetHeight()/2 - lock.scaled.GetHeight()/2;
  lock.z = box.z + 1;
  lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
  entry.sprite = Sprite(entry.image);
  entry.x = lock.x + lock.scaled.GetWidth();
  entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
  entry.z = box.z + 1;
  entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
  global.dialog.box = box;
  global.dialog.lock = lock;
  global.dialog.entry = entry;
  global.dialog.bullet_image = Image("bullet.png");
  dialog_opacity (1);
}
    
fun dialog_opacity(opacity) {
  dialog.box.sprite.SetOpacity (opacity);
  dialog.lock.sprite.SetOpacity (opacity);
  dialog.entry.sprite.SetOpacity (opacity);
  for (index = 0; dialog.bullet[index]; index++) {
    dialog.bullet[index].sprite.SetOpacity(opacity);
  }
}

fun display_normal_callback () {
  global.status = "normal";
  if (global.dialog) {
    dialog_opacity (0);
  }
}

fun display_password_callback (prompt, bullets) {
  global.status = "password";
  if (!global.dialog)
  dialog_setup();
  else
  dialog_opacity(1);
  for (index = 0; dialog.bullet[index] || index < bullets; index++) {
    if (!dialog.bullet[index]) {
      dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
      dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
      dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
      dialog.bullet[index].z = dialog.entry.z + 1;
      dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
    }
    if (index < bullets) {
      dialog.bullet[index].sprite.SetOpacity(1);
    } else {
      dialog.bullet[index].sprite.SetOpacity(0);
    }
  }
}

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Progress Bar --------------------------------

progress_box.image = Image("progress_box.png");
progress_box.sprite = Sprite(progress_box.image);

progress_box.x = Window.GetWidth()  / 2 -    progress_box.image.GetWidth()  / 2;
progress_box.y = Window.GetHeight() * 0.18 - progress_box.image.GetHeight() / 2;
progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);

progress_bar.original_image = Image("progress_bar.png");
progress_bar.sprite = Sprite();

progress_bar.x = progress_box.x;
progress_bar.y = (progress_box.y + (progress_box.image.GetHeight() / 2)) - (progress_bar.original_image.GetHeight() / 2);
progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);

fun progress_callback (duration, progress) {
  if (progress_bar.image.GetWidth () != Math.Int (progress_bar.original_image.GetWidth () * progress)) {
      progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * progress, progress_bar.original_image.GetHeight());
      progress_bar.sprite.SetImage (progress_bar.image);
  }
}

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback () {}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
